[{"id":"ca2d45a9.df50f8","type":"function","z":"4122de09.1a4cf8","name":"RSS-EXTRACTOR","func":"// Додаємо  сецифічні пакети\n//var uuidv4 = global.get('uuidv4');\n\nvar xrss = global.get('rsstojson');\n\n//Читаю URL стрічки  новин\nlet l_rss_url=flow.get('i-rss-url');\nlet l_rss_name=flow.get('i-rss-name');\n\n//Викликаю загрузку rss-стрічку\n// асинхронний виклик\n\nxrss.load(l_rss_url, function(err, rss){\n    //https://developer.ibm.com/recipes/tutorials/nodered-exception-handling-framework/\n    if ( err) {\n        node.error( err );\n        console.log(err);\n        console.log(msg.payload);\n        \n    } else {\n    \n        var rsp = {};\n    \n        /** Готую вкладення*/\n        // 1. перевожу вкладення в string\n        var rss_str = JSON.stringify(rss);\n        //2. Кодую вкладення в BASE64\n        var rss_buf = new Buffer( rss_str );\n        var rss_buf64 = rss_buf.toString('base64');\n    \n    \n    \n        rsp = { msgtype: 'RSS-FILE', \n                rss_name: l_rss_name, \n                rss_url: l_rss_url,\n                \"_attachments\": {\n                                    \"rss_file.json\": {\n                                        \"content_type\": \"application/json\",\n                                        \"data\": rss_buf64\n                                    }\n                }\n        } ;\n    \n\n        msg.payload = rsp ;\n        node.send(msg); \n        node.done();\n    }  // if(err)\n    \n});\n\n\nreturn ;","outputs":1,"noerr":0,"x":570,"y":100,"wires":[["4e099b73.7c73a4","321a6b3f.ec566c"]]}]
